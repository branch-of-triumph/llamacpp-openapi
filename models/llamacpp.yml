openapi: 3.0.3
info:
  title: llama.cpp Server API
  description: API for interacting with the llama.cpp server.
  version: 1.0.0
servers:
  - url: http://localhost:8080
tags:
  - name: llamaCpp
    description: llamacpp native API
  - name: openai
    description: openai compatible

paths:
  /health:
    get:
      tags:
        - llamaCpp
      summary: Get the health status of the server
      operationId: getHealth
      description: Returns the current state of the server
      parameters:
        - name: include_slots
          in: query
          required: false
          schema:
            type: boolean
          description: Include internal slots data in the response
        - name: fail_on_no_slot
          in: query
          required: false
          schema:
            type: boolean
          description: Fail if no slot is available
      responses:
        '200':
          description: Service healthy. Slot may be available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHealthResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHealthResponse'
        '503':
          description: No slot available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHealthResponse'
  /completion:
    post:
      tags:
        - llamaCpp
      operationId: postCompletion
      summary: Generate a text completion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCompletionRequest'
      responses:
        '200':
          description: Completion generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostCompletionResponse'
  /tokenize:
    post:
      tags:
        - llamaCpp
      operationId: postTokenize
      summary: Tokenize a given text
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostTokenizeRequest'
      responses:
        '200':
          description: Tokenize text successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostTokenizeResponse'
  /detokenize:
    post:
      tags:
        - llamaCpp
      operationId: postDetokenize
      summary: Detokenize given tokens
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostDetokenizeRequest'
      responses:
        '200':
          description: Detokenize successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostDetokenizeResponse'
  /props:
    get:
      tags:
        - llamaCpp
      operationId: getProps
      summary: Get the current settings of the server
      responses:
        '200':
          description: The settings are fetched
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPropsResponse'
  /metrics:
    get:
      tags:
        - llamaCpp
      operationId: getMetrics
      summary: Get the metrics of the server
      responses:
        '200':
          description: The metrics are fetched
          content:
            text/plain:
              schema:
                type: string
        '501':
          description: Metrics are not supported
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /slots:
    get:
      tags:
        - llamaCpp
      operationId: getSlots
      summary: Returns the current slots processing state.
      responses:
        '200':
          description: Returns slot data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSlotsResponse'
        '501':
          description: Slots API disabled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /slots/{id_slot}:
    post:
      tags:
        - llamaCpp
      operationId: postSlots
      summary: Save, restore, or erase the prompt cache of the specified slot to a file.
      parameters:
        - name: id_slot
          in: path
          required: true
          schema:
            type: integer
        - name: action
          in: query
          required: true
          schema:
            type: string
            enum: [save, restore, erase]
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSlotsRequest'
      responses:
        '200':
          description: Tokenize text successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSlotsResponse'
        '501':
          description: Slots API disabled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /infill:
    post:
      tags:
        - llamaCpp
      operationId: postInfill
      summary: For code infilling. Takes a prefix and a suffix and returns the predicted completion as stream.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostInfillRequest'
      responses:
        '200':
          description: Infill generated successfully (note that response structure is identical to POST /completion)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostInfillResponse'
  /embedding:
    post:
      tags:
        - llamaCpp
      operationId: postEmbedding
      summary: Generate embedding of a given text.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostEmbeddingRequest'
      responses:
        '200':
          description: Embedding generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostEmbeddingResponse'

components:
  schemas:
    Slot:
      type: object
      properties:
        n_ctx:
          type: integer
        n_predict:
          type: integer
        model:
          type: string
        seed:
          type: integer
        temperature:
          type: number
        dynatemp_range:
          type: number
        dynatemp_exponent:
          type: number
        top_k:
          type: integer
        top_p:
          type: number
        min_p:
          type: number
        tfs_z:
          type: number
        typical_p:
          type: number
        repeat_last_n:
          type: integer
        repeat_penalty:
          type: number
        presence_penalty:
          type: number
        frequency_penalty:
          type: number
        penalty_prompt_tokens:
          type: array
          items:
            type: string
        use_penalty_prompt_tokens:
          type: boolean
        mirostat:
          type: integer
        mirostat_tau:
          type: number
        mirostat_eta:
          type: number
        penalize_nl:
          type: boolean
        stop:
          type: array
          items:
            type: string
        n_keep:
          type: integer
        n_discard:
          type: integer
        ignore_eos:
          type: boolean
        stream:
          type: boolean
        logit_bias:
          type: array
          items:
            type: number
        n_probs:
          type: integer
        min_keep:
          type: integer
        grammar:
          type: string
        samplers:
          type: array
          items:
            type: string
        id:
          type: integer
        id_task:
          type: integer
        state:
          type: integer
        prompt:
          type: string
          nullable: true
        next_token:
          $ref: '#/components/schemas/NextToken'
      required:
        - n_ctx
    SlotsTimings:
      type: object
      properties:
        save_ms:
          type: number
          description: Time taken to save in milliseconds
        restore_ms:
          type: number
          description: Time taken to restore in milliseconds
    CompletionTimings:
      type: object
      properties:
        prompt_n:
          type: integer
          description: Prompt Length
        prompt_ms:
          type: number
        prompt_per_token_ms:
          type: number
        prompt_per_second:
          type: number
        predicted_n:
          type: integer
        predicted_ms:
          type: number
        predicted_per_token_ms:
          type: number
        predicted_per_second:
          type: number
    NextToken:
      type: object
      properties:
        has_next_token:
          type: boolean
        n_remain:
          type: integer
        n_decoded:
          type: integer
        stopped_eos:
          type: boolean
        stopped_word:
          type: boolean
        stopped_limit:
          type: boolean
        stopping_word:
          type: string
    GenerationSettings:
      type: object
      properties:
        n_ctx:
          type: integer
        n_predict:
          type: integer
        model:
          type: string
        seed:
          type: integer
        temperature:
          type: number
        dynatemp_range:
          type: number
        dynatemp_exponent:
          type: number
        top_k:
          type: integer
        top_p:
          type: number
        min_p:
          type: number
        tfs_z:
          type: number
        typical_p:
          type: number
        repeat_last_n:
          type: integer
        repeat_penalty:
          type: number
        presence_penalty:
          type: number
        frequency_penalty:
          type: number
        penalty_prompt_tokens:
          type: array
          items:
            type: string
        use_penalty_prompt_tokens:
          type: boolean
        mirostat:
          type: integer
        mirostat_tau:
          type: number
        mirostat_eta:
          type: number
        penalize_nl:
          type: boolean
        stop:
          type: array
          items:
            type: string
        n_keep:
          type: integer
        n_discard:
          type: integer
        ignore_eos:
          type: boolean
        stream:
          type: boolean
        logit_bias:
          type: array
          items:
            type: number
        n_probs:
          type: integer
        min_keep:
          type: integer
        grammar:
          type: string
        samplers:
          type: array
          items:
            type: string
    Image:
      type: object
      properties:
        data:
          type: string
        id:
          type: integer
    SystemPrompt:
      type: object
      properties:
        prompt:
          type: string
        anti_prompt:
          type: string
        assistant_name:
          type: string
    Error:
      type: object
      properties:
        code:
          type: string
          nullable: true
        message:
          type: string
          nullable: false
        param:
          type: string
          nullable: true
        type:
          type: string
          nullable: false
      required:
        - type
        - message
        - param
        - code
    ErrorResponse:
      type: object
      properties:
        error:
          $ref: "#/components/schemas/Error"
      required:
        - error
    GetHealthResponse:
      type: object
      properties:
        status:
          type: string
        slots_idle:
          type: integer
          description: Number of idle slots
        slots_processing:
          type: integer
          description: Number of processing slots
        slots:
          type: array
          items:
            $ref: '#/components/schemas/Slot'
      required:
        - status
    PostCompletionRequest:
      type: object
      properties:
        prompt:
          type: string
          description: The input text to complete
        temperature:
          type: number
          description: Temperature parameter
        dynatemp_range:
          type: number
          description: Dynamic temperature range
        dynatemp_exponent:
          type: number
          description: Dynamic temperature exponent
        top_k:
          type: integer
          description: Top-k sampling parameter
        top_p:
          type: number
          description: Top-p sampling parameter
        min_p:
          type: number
          description: Minimum probability threshold
        n_predict:
          type: integer
          description: Number of tokens to predict
        n_keep:
          type: integer
          description: Number of keep tokens
        stream:
          type: boolean
          description: Stream flag
        stop:
          type: array
          items:
            type: string
          description: Stop tokens
        tfs_z:
          type: number
          description: TF-Sampling parameter
        typical_p:
          type: number
          description: Typical-P sampling parameter
        repeat_penalty:
          type: number
          description: Repeat penalty parameter
        repeat_last_n:
          type: integer
          description: Repeat last n tokens parameter
        penalize_nl:
          type: boolean
          description: Penalize newline flag
        presence_penalty:
          type: number
          description: Presence penalty parameter
        frequency_penalty:
          type: number
          description: Frequency penalty parameter
        penalty_prompt:
          type: string
          description: The penalty prompt
        mirostat:
          type: integer
          description: Mirostat parameter
        mirostat_tau:
          type: number
          description: Mirostat tau parameter
        mirostat_eta:
          type: number
          description: Mirostat eta parameter
        grammar:
          type: string
          description: Grammar parameter
        json_schema:
          description: Grammar parameter
        seed:
          type: integer
          description: Random seed
        ignore_eos:
          type: boolean
          description: Ignore EOS flag
        logit_bias:
          type: array
          items:
            type: number
          description: Logit bias values
        n_probs:
          type: integer
          description: Number of probabilities to return
        min_keep:
          type: integer
          description: Minimum keep tokens parameter
        image_data:
          type: array
          items:
            $ref: '#/components/schemas/Image'
          description: Images to reference
        id_slot:
          type: integer
          description: Slot identifier
        cache_prompt:
          type: boolean
          description: To cache or not to cache prompt
        system_prompt:
          $ref: "#/components/schemas/SystemPrompt"
        samplers:
          type: array
          items:
            type: string
          description: Samplers list
    PostCompletionResponse:
      type: object
      properties:
        content:
          type: string
        id_slot:
          type: integer
        stop:
          type: boolean
        model:
          type: string
        tokens_predicted:
          type: integer
        tokens_evaluated:
          type: integer
        generation_settings:
          $ref: '#/components/schemas/GenerationSettings'
        prompt:
          type: string
        truncated:
          type: boolean
        stopped_eos:
          type: boolean
        stopped_word:
          type: boolean
        stopped_limit:
          type: boolean
        stopping_word:
          type: string
        tokens_cached:
          type: integer
        timings:
          $ref: '#/components/schemas/CompletionTimings'
    PostTokenizeRequest:
      type: object
      properties:
        content:
          type: string
          description: Text to tokenize
        add_special:
          type: boolean
          description: To insert special tokens or not
    PostTokenizeResponse:
      type: object
      properties:
        tokens:
          type: array
          items:
            type: integer
          description: Tokens generated from given text
    GetSlotsResponse:
      type: array
      items:
        $ref: '#/components/schemas/Slot'
    PostSlotsRequest:
      type: object
      properties:
        filename:
          type: string
          description: Name of the file to to save/restore the slot's prompt cache to/from. The file should be located in the directory specified by the `--slot-save-path` server parameter.
    PostSlotsResponse:
      type: object
      properties:
        id_slot:
          type: integer
          description: Slot ID
        filename:
          type: string
          description: Filename of the saved slot file
        n_saved:
          type: integer
          description: Number of saved items
        n_written:
          type: integer
          description: Number of written items
        n_restored:
          type: integer
          description: Number of restored items
        n_read:
          type: integer
          description: Number of bytes read
        n_erased:
          type: integer
          description: Number of erased items
        timings:
          $ref: '#/components/schemas/SlotsTimings'
    PostInfillRequest:
      type: object
      properties:
        input_prefix:
          type: string
          description: Set the prefix of the code to infill.
        input_suffix:
          type: string
          description: Set the suffix of the code to infill.
        temperature:
          type: number
          description: Temperature parameter
        dynatemp_range:
          type: number
          description: Dynamic temperature range
        dynatemp_exponent:
          type: number
          description: Dynamic temperature exponent
        top_k:
          type: integer
          description: Top-k sampling parameter
        top_p:
          type: number
          description: Top-p sampling parameter
        min_p:
          type: number
          description: Minimum probability threshold
        n_predict:
          type: integer
          description: Number of tokens to predict
        n_keep:
          type: integer
          description: Number of keep tokens
        stop:
          type: array
          items:
            type: string
          description: Stop tokens
        tfs_z:
          type: number
          description: TF-Sampling parameter
        typical_p:
          type: number
          description: Typical-P sampling parameter
        repeat_penalty:
          type: number
          description: Repeat penalty parameter
        repeat_last_n:
          type: integer
          description: Repeat last n tokens parameter
        penalize_nl:
          type: boolean
          description: Penalize newline flag
        presence_penalty:
          type: number
          description: Presence penalty parameter
        frequency_penalty:
          type: number
          description: Frequency penalty parameter
        penalty_prompt:
          type: string
          description: The penalty prompt
        mirostat:
          type: integer
          description: Mirostat parameter
        mirostat_tau:
          type: number
          description: Mirostat tau parameter
        mirostat_eta:
          type: number
          description: Mirostat eta parameter
        grammar:
          type: string
          description: Grammar parameter
        json_schema:
          description: Grammar parameter
        seed:
          type: integer
          description: Random seed
        ignore_eos:
          type: boolean
          description: Ignore EOS flag
        logit_bias:
          type: array
          items:
            type: number
          description: Logit bias values
        n_probs:
          type: integer
          description: Number of probabilities to return
        min_keep:
          type: integer
          description: Minimum keep tokens parameter
        image_data:
          type: array
          items:
            $ref: '#/components/schemas/Image'
          description: Images to reference
        id_slot:
          type: integer
          description: Slot identifier
        cache_prompt:
          type: boolean
          description: To cache or not to cache prompt
        system_prompt:
          $ref: "#/components/schemas/SystemPrompt"
        samplers:
          type: array
          items:
            type: string
          description: Samplers list
    PostInfillResponse:
      $ref: '#/components/schemas/PostCompletionResponse'
    PostEmbeddingRequest:
      type: object
      properties:
        content:
          type: string
          description: Set the text to process.
        image_data:
          type: array
          items:
            $ref: '#/components/schemas/Image'
    PostEmbeddingResponse:
      type: object
      properties:
        embedding:
          type: array
          items:
            type: number
    PostDetokenizeRequest:
      type: object
      properties:
        tokens:
          type: array
          items:
            type: integer
    PostDetokenizeResponse:
      type: object
      properties:
        content:
          type: string
          description: Text generated from tokens
    GetPropsResponse:
      type: object
      properties:
        system_prompt:
          type: string
          description: Specified system prompt
        assistant_name:
          type: string
          description: Assistant name to generate the prompt
        user_name:
          type: string
          description: Anti-prompt to generate the prompt
        default_generation_settings:
          $ref: '#/components/schemas/GenerationSettings'
        total_slots:
          type: integer
          description: Total number of slots
        chat_template:
          type: string
          description: The model's prompt template
        